def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//def googleMapApiKey = System.getenv("DriverData")// leaving this since it works locally? what refreshes env variables?

//def googleMapApiKey = System.getenv("MAP_API_KEY")


def keystoreProperties = new Properties()

def keystorePropertiesFile = rootProject.file('key.properties')

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}



apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }



    defaultConfig {

        // at build time, this line creates a string named maps_api_key with the value from the env variable MAPS_API_KEY
        // it gets the env variable value from the build settings in codemagic.io
        resValue "string", "maps_api_key", "$System.env.MAPS_API_KEY"
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.v3.buffaloretailgroupmap"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
          // Other values set here
        //resValue "string", "facebook_app_id", "$System.env.FACEBOOK_ID"


   


    
     }

     signingConfigs {
        file(rootProject.file('key.properties')).with { propFile ->
            if (propFile.canRead()) {
                print("signing with local properties file")
                release {
                    keyAlias keystoreProperties['keyAlias']
                    keyPassword keystoreProperties['keyPassword']
                    storeFile file(keystoreProperties['storeFile'])
                    storePassword keystoreProperties['storePassword']
                }
            }
            else {
                print('not signed, CI/CD will need to sign')
            }
        }
    }


    buildTypes {
        release {
            //https://stackoverflow.com/questions/46177560/failed-to-read-png-signature-file-does-not-start-with-png-signature/48590453

            crunchPngs false // or true
            file(rootProject.file('key.properties')).with { propFile ->
                if (propFile.canRead()) {
                    // because we can read the keystore
                    // we are building locally
                    // so sign locally
                    // otherwise build an unsigned apk for later signing by the CI/CD provider
                    signingConfig signingConfigs.release
                }
            }

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    output.outputFileName = "app-release.apk"
                }
            }
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig signingConfigs.release
        }
    }
}



flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:26.6.0')
}
